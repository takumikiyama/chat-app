generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String             @id @default(uuid())
  name              String
  email             String             @unique
  password          String
  bio               String?
  createdAt         DateTime           @default(now())
  chats1            Chat[]             @relation("ChatUser1")
  chats2            Chat[]             @relation("ChatUser2")
  matchedPairs1     MatchPair[]        @relation("MatchPairUser1")
  matchedPairs2     MatchPair[]        @relation("MatchPairUser2")
  receivedMessages  SentMessage[]      @relation("ReceivedMessages")
  sentMessages      SentMessage[]      @relation("SentMessages")
  messagesSent      Message[]          @relation("UserMessages")
  pushSubscriptions PushSubscription[] @relation("UserSubscriptions")
}

model SentMessage {
  id         String   @id @default(uuid())
  senderId   String
  receiverId String
  message    String
  createdAt  DateTime @default(now())
  receiver   User     @relation("ReceivedMessages", fields: [receiverId], references: [id])
  sender     User     @relation("SentMessages",   fields: [senderId],   references: [id])
}

model MatchPair {
  id        String   @id @default(uuid())
  user1Id   String
  user2Id   String
  message   String
  matchedAt DateTime @default(now())
  user1     User     @relation("MatchPairUser1", fields: [user1Id], references: [id])
  user2     User     @relation("MatchPairUser2", fields: [user2Id], references: [id])
}

model Chat {
  id        String    @id @default(uuid())
  user1Id   String
  user2Id   String
  createdAt DateTime  @default(now())
  user1     User      @relation("ChatUser1", fields: [user1Id], references: [id])
  user2     User      @relation("ChatUser2", fields: [user2Id], references: [id])
  messages  Message[]
}

model Message {
  id        String   @id @default(uuid())
  chatId    String
  senderId  String
  content   String
  createdAt DateTime @default(now())
  chat      Chat     @relation(fields: [chatId],   references: [id])
  sender    User     @relation("UserMessages", fields: [senderId], references: [id])
}

model PushSubscription {
  id           String   @id @default(cuid())
  userId       String
  endpoint     String   @unique
  subscription Json
  isActive     Boolean  @default(true)
  createdAt    DateTime @default(now())

  user         User     @relation("UserSubscriptions", fields: [userId], references: [id])

  @@index([userId])
}

model PresetMessage {
  id        String   @id @default(uuid())
  content   String
  createdBy String   // ユーザーID（匿名の場合もあり）
  createdAt DateTime @default(now())
}

